<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angular on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/angular/</link>
    <description>Recent content in Angular on Facile.it Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://engineering.facile.it/categories/angular/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Angular Components: from AngularJS to &#34;just Angular&#34;</title>
      <link>https://engineering.facile.it/blog/eng/angular-components-from-angularjs-to-just-angular/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/angular-components-from-angularjs-to-just-angular/</guid>
      <description>With version 1.5 and newer, AngularJS (which for clarity we&amp;rsquo;ll call just Angular from now on, even though the naming convention was recently updated) introduced their own interpretation of Web Components, back-porting Components from Angular 2.
Using Components with Angular today not only means writing code much more easily upgradeable to future framework versions (especially using ES6), but it also allows you to modularize and reuse code more easily, in line with the modern frontend programming style that will be more and more modular.</description>
    </item>
    
  </channel>
</rss>