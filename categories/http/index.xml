<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/http/</link>
    <description>Recent content in HTTP on Facile.it Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://engineering.facile.it/categories/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Faster Web with HTTP/2</title>
      <link>https://engineering.facile.it/blog/eng/faster-web-with-http-2/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/faster-web-with-http-2/</guid>
      <description>HTTP is the protocol that powers the Web. It was originally designed in 1996 for transferring and manipulating simple text-based documents (mainly hypertext resources). Nowadays it&amp;rsquo;s been adopted for many different purposes. It&amp;rsquo;s used for: multimedia content transfer, rich real-time session-based web applications, API messages dispatch, Internet of Things and much more. For this reason, the HTTP specifications are continuously updated, by adding new features and improving performance.
In May 2015, the latest version 2.</description>
    </item>
    
    <item>
      <title>GraphQL: an introduction</title>
      <link>https://engineering.facile.it/blog/eng/graphql-an-introduction/</link>
      <pubDate>Mon, 18 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/graphql-an-introduction/</guid>
      <description>The lesson we learned with REST For many developers, nowadays, building an API for their applications essentially means mapping the resources of the domain to URIs, with the REST principles in mind. Usually creating a RESTful system is not difficult, and the simplicity of the idea makes the task easier. Let&amp;rsquo;s see some of the consequences and benefits of choosing REST:
 Every HTTP verb has its own meaning, allowing the developer to understand immediately what kind of operation (typically among the CRUD ones) is going to be performed on the resource identified by the URI.</description>
    </item>
    
  </channel>
</rss>